server.port=8060

eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka

#eureka.client.service-url.defaultZone=${EUREKA_SERVER_ADDRESS:http://localhost:8761/eureka}

#When set to true, this property instructs the Eureka client to prefer registering its instance 
#with an IP address instead of a hostname. In a cloud or containerized environment, using IP addresses 
#can be more reliable for service discovery as they are less prone to DNS resolution issues.

#This property ensures that the Eureka server and other services can reach the registered service 
#instances using IP addresses.
eureka.instance.prefer-ip-address=true

#When set to true, the Eureka client periodically fetches the registry of available services from the Eureka server. 
#This allows the client to discover other services and know their locations.
#In a microservices architecture, this property is crucial as it enables services to discover each other dynamically. 
#Services can query the Eureka server to find the locations of other services they depend on.
eureka.client.fetch-registry=true

#When set to true, the Eureka client registers itself with the Eureka server. 
#This means the service instance running on a specific host and port will be visible in the Eureka server's registry, 
#allowing other services to discover it.
#In a microservices architecture, this property is essential for service registration. 
#When services start up, they register themselves with the Eureka server, making themselves available 
#for discovery by other services.
eureka.client.register-with-eureka=true


#for 100% tracing of matrices in zipkin
management.tracing.sampling.probability=1.0